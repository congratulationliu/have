package main

import "fmt"
//切片是变长,数组是固定长度
//冒泡循环两层循环,第二个每次都从后往前确定一个值
func bsSort(a []int){
	for i := 0;i < len(a);i++{
		//每个元素执行一个冒泡
		for j := 1; j < len(a) - i;j++{
			if (a[j] < a[j-1]){ //当前值 小于 上一个值就交换位置
				a[j],a[j-1] = a[j-1],a[j]
			}
			fmt.Println(a)
		}
	}

}

func main() {
	slice := []int{8,7,5,4,3,10,15} //切片
	bsSort(slice)
	fmt.Println("finally: ",slice)
}


/*
[7 8 5 4 3 10 15]
[7 5 8 4 3 10 15]
[7 5 4 8 3 10 15]
[7 5 4 3 8 10 15]
[7 5 4 3 8 10 15]
[7 5 4 3 8 10 15]
[5 7 4 3 8 10 15]
[5 4 7 3 8 10 15]
[5 4 3 7 8 10 15]
[5 4 3 7 8 10 15]
[5 4 3 7 8 10 15]
[4 5 3 7 8 10 15]
[4 3 5 7 8 10 15]
[4 3 5 7 8 10 15]
[4 3 5 7 8 10 15]
[3 4 5 7 8 10 15]
[3 4 5 7 8 10 15]
[3 4 5 7 8 10 15]
[3 4 5 7 8 10 15]
[3 4 5 7 8 10 15]
[3 4 5 7 8 10 15]
finally:  [3 4 5 7 8 10 15]
*/

